<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="java100.app.dao.MemberDao">

    <resultMap type="member" id="memberMap">
        <id column="no" property="no"/>
        
        <result column="email" property="email"/>
        <result column="pwd" property="password"/>
        <result column="regdt" property="createdDate"/>
    </resultMap>

<!-- 
    <sql id="select1">
        select 
            no, 
            name, 
            (kor + eng + math) as sum,
            ((kor + eng + math) / 3) as aver
    </sql>
 -->
 
    <select id="findAll" resultMap="memberMap" parameterType="map">
        select 
            no,
            name,
            email,
            regdt 
        from ex_memb

        <if test="words != null">
            <where>
                name in 
                <foreach collection="words" item="word" 
                         open="(" close=")" separator=",">
                    #{word}
                </foreach>
                or email in 
                <foreach collection="words" item="word" 
                         open="(" close=")" separator=",">
                    #{word}
                </foreach>
            </where>
        </if>
        
        order by
        <choose>
            <when test="orderColumn == 'regdt' and align == 'desc'">
                regdt desc
            </when>
            <when test="orderColumn == 'regdt' and align == 'asc'">
                regdt asc
            </when>
            <otherwise>
                no asc
            </otherwise>
        </choose>
    </select>
    
    <select id="findByNo" resultMap="memberMap" parameterType="int">
        select 
            no,
            name,
            email,
            regdt, 
            pwd 
        from ex_memb
        where no=#{value}
    </select>
    
    <select id="findByEmailAndPassword" resultMap="memberMap" parameterType="map">
        select 
            no,
            name,
            email,
            regdt, 
            pwd 
        from ex_memb
        where email=#{email} and pwd=password(#{password})
    </select>
    
    <insert id="insert" parameterType="member">
        insert into ex_memb(name,email,pwd,regdt)
        values(#{name},#{email},password(#{password}),now())
    </insert>
    
    <update id="update" parameterType="member">
        update ex_memb set 
        name=#{name}, email=#{email}, pwd=password(#{password})
        where no=#{no}
    </update>
    
    <delete id="delete" parameterType="int">
        delete from ex_memb 
        where no=#{value}
    </delete>
 
</mapper>