<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="java100.app"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	        </list>
	    </property>
    </bean>
    
    <!-- 멀티파트 형식으로 전송된 데이터를 처리할 객체를 등록한다. -->
    <bean id="multipartResolver" 
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="5000000"/>
    </bean>
    
     
    <!-- 기본 ViewResolver를 교체한다. -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- mybatis의 SQL 실행 객체 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:java100/app/dao/mysql/*Dao.xml"/>
        <property name="typeAliasesPackage" value="java100.app.domain"/> 
    </bean>    
    
    <!-- DB 커넥션 풀 역할을 수행할 DataSource 객체 -->    
    <context:property-placeholder location="classpath*:java100/app/jdbc.properties"/>
    <bean id="dataSource" 
          class="org.apache.commons.dbcp2.BasicDataSource" 
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <!-- 트랜잭션 관리자 추가 -->
    <bean id="transactionManager" 
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="java100.app.dao" />
    </bean>
    
    <!-- 인터셉터 -->
    <mvc:interceptors>
        <mvc:interceptor>
             <mvc:mapping path="/**"/>
             <mvc:exclude-mapping path="/auth/**"/>
             <bean class="java100.app.web.interceptor.AuthInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
    
    <!-- 트랜잭션 작업을 수행할 advice -->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="list*" read-only="true"/>
            <!-- <tx:method name="get*" read-only="true"/> -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- 트랜잭션 advice를 적용할 대상을 지정 -->
    <aop:config>
        <aop:pointcut id="serviceOperation" 
             expression="execution(* java100.app.service..*ServiceImpl.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>
    
</beans>























