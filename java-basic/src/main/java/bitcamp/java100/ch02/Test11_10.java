// # 자바에서 값 표현(literal)하기 - 부동소수점의 크기
//
package bitcamp.java100.ch02;

public class Test11_10 {

    public static void main(String[] args) {
// 부동 소수점의 값 크기
// - IEEE-754 규칙에 따라 부동소수점을 2진수로 바꾸기 때문에 정확히 음수 어디에서 양수 어디까지, 소수점 이상 몇자리 소수점 이하 몇자리라고 말할 수 없다.
// - 그래서 부동소수점의 값의 범위를 얘기할 때는 보통 "유효자릿수"라는 말로 표현한다.
// - 즉 소수점을 뺀 나머지 숫자의 개수를 몇 개까지 정확하게 저장할 수 있는지 말하는 것이다.
// 1) 32비트 단정도 메모리
//    => 유효자릿수가 7자리이다.
//    => 즉 소수점을 제외한 7자리의 수를 정상적으로 저장할 수 있다.
//    => 단정도 부동소수점은 반드시 값 뒤에 f 또는 F를 붙여야 한다.
        System.out.println(9876567f); // 7자리
        System.out.println(98765678f); // 8자리
        System.out.println(9876.567f); // 7자리
        System.out.println(9876.5678f); // 8자리

        
// 2) 64비트 배정도 메모리
//    => 유효자릿수가 15자리이다.
//    => 소수점을 제외한 15자리의 수를 정상적으로 저장할 수 있다.
//    => 단정도 보다 두 배 정도 더 정밀한 값을 저장할 수 있다고 해서 배정도라 부른다.
//    => 배정도 부동소수점은 숫자 뒤에 아무것도 붙이지 않는다.
//       숫자를 적을 때 뒤에 뭔가를 붙이지 않으면 편하다.
//       즉 부동소수점을 사용할 때는 가능한 배정도 값으로 표현하라는 뜻이다.
        System.out.println(98765678); // 8자리
        System.out.println(9876.5678); // 8자리
    }
}
